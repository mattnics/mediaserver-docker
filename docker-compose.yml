version: "3"

services:

  nzbget:
    image: ghostserverd/nzbget
    container_name: nzbget
    restart: always
    ports:
      - "${NZBGET_PORT}:6789"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - NZBGET_WEB_USER=${NZBGET_WEB_USER}
      - NZBGET_WEB_PASS=${NZBGET_WEB_PASS}
      - NZBGET_MAIN_DIR=${NZBGET_MAIN_DIR}
      - NZBGET_SCRIPT_DIR=${NZBGET_SCRIPT_DIR}
      - FILEBOT_PORT=${FILEBOT_PORT}
      - SONARR_API_KEY=${SONARR_API_KEY}
      - SONARR_PORT=${SONARR_PORT}
      - RADARR_API_KEY=${RADARR_API_KEY}
      - RADARR_PORT=${RADARR_PORT}
    volumes:
      - ${CONFIG_DIR}/nzbget:/config
      - ${DOWNLOAD_DIR}/nzb:/downloads/nzb

  sonarr:
    image: ghostserverd/sonarr
    container_name: sonarr
    restart: always
    ports:
      - "${SONARR_PORT}:8989"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${DOWNLOAD_DIR}:/data/completed/tv/
      - ${TV_DIR}:/tv

  radarr:
    image: ghostserverd/radarr
    container_name: radarr
    restart: always
    ports:
      - "${RADARR_PORT}:7878"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${DOWNLOAD_DIR}:/data/completed/movies/
      - ${MOVIES_DIR}:/movies


  heimdall:
    image: ghostserverd/heimdall
    container_name: heimdall
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    ports:
      - "${HEIMDALL_PORT}:80"
      - "${HEIMDALL_SSL_PORT}:443"
    volumes:
      - ${CONFIG_DIR}/heimdall:/config

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: ${LE_HOSTNAME}
    ports:
      - "${NETDATA_PORT}:19999"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    ports:
      - 5055:5055
    volumes:
      - ${CONFIG_DIR}/overseerr:/app/config
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    command: --cleanup
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
